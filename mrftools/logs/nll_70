================================= ///////////////////START//////////////// =========================================
======================================Simulating data...
> Creating model
> Generating data
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69]
{0: 5, 1: 5, 2: 5, 3: 5, 4: 5, 5: 5, 6: 5, 7: 5, 8: 5, 9: 5, 10: 5, 11: 5, 12: 5, 13: 5, 14: 5, 15: 5, 16: 5, 17: 5, 18: 5, 19: 5, 20: 5, 21: 5, 22: 5, 23: 5, 24: 5, 25: 5, 26: 5, 27: 5, 28: 5, 29: 5, 30: 5, 31: 5, 32: 5, 33: 5, 34: 5, 35: 5, 36: 5, 37: 5, 38: 5, 39: 5, 40: 5, 41: 5, 42: 5, 43: 5, 44: 5, 45: 5, 46: 5, 47: 5, 48: 5, 49: 5, 50: 5, 51: 5, 52: 5, 53: 5, 54: 5, 55: 5, 56: 5, 57: 5, 58: 5, 59: 5, 60: 5, 61: 5, 62: 5, 63: 5, 64: 5, 65: 5, 66: 5, 67: 5, 68: 5, 69: 5}
5
NUM VARIABLES
70
NUM EDGES
35
EDGES
[(1, 55), (3, 43), (6, 34), (7, 37), (8, 31), (8, 53), (8, 57), (10, 18), (11, 68), (12, 18), (12, 45), (13, 33), (13, 58), (13, 62), (15, 35), (15, 61), (16, 30), (16, 37), (17, 28), (18, 51), (19, 62), (20, 25), (27, 54), (29, 57), (30, 46), (32, 69), (37, 44), (39, 40), (39, 60), (40, 50), (40, 63), (44, 47), (45, 69), (55, 64), (61, 62)]
>>>>>>>>>>>>>>>>>>>>>METHOD: structured
======PARAMS
1e-05
1.15e-05
/home/walidch/mrf_project/MRFToolBox/mrftools/mrftools/Learner.py:119: FutureWarning: comparison to `None` will result in an elementwise object comparison in the future.
  if (self.tau_q == None or not self.fully_observed) and not (self.graft):
/home/walidch/mrf_project/MRFToolBox/mrftools/mrftools/Learner.py:133: FutureWarning: comparison to `None` will result in an elementwise object comparison in the future.
  if (self.tau_q == None or not self.fully_observed) and not (self.graft):
False
======PARAMS
2.5e-05
2.875e-05
False
======PARAMS
5e-05
5.75e-05
False
======PARAMS
7.5e-05
8.625e-05
False
======PARAMS
0.0001
0.000115
False
======PARAMS
0.00025
0.0002875
False
======PARAMS
0.0005
0.000575
False
======PARAMS
0.00075
0.0008625
False
======PARAMS
0.001
0.00115
False
======PARAMS
0.0025
0.002875
False
======PARAMS
0.005
0.00575
False
======PARAMS
0.0075
0.008625
False
======PARAMS
0.01
0.0115
False
======PARAMS
0.025
0.02875
Average Selection iterations
171.769230769
SUFFICIENT STATS
2415
Recall
0.2
Precision
0.636363636364
F1-score
0.304347826087
Correctly re-ordered
2.0
1.0
True
NEW OPT EDGE L1
0.025
======PARAMS
0.05
0.0575
Average Selection iterations
244.875
SUFFICIENT STATS
2415
Recall
0.142857142857
Precision
0.833333333333
F1-score
0.243902439024
Correctly re-ordered
0.0
N/A
True
======PARAMS
0.075
0.08625
Average Selection iterations
326.5
SUFFICIENT STATS
2415
Recall
0.0857142857143
Precision
0.75
F1-score
0.153846153846
Correctly re-ordered
0.0
N/A
True
======PARAMS
0.1
0.115
Average Selection iterations
0.0
SUFFICIENT STATS
2415
Recall
0
Precision
0
F1-score
0
Correctly re-ordered
0.0
N/A
True
>>>>>>>>Getting best node reg...
//////
0.025
0.0375
//////
0.025
0.03125
//////
0.025
0.03
