================================= ///////////////////START//////////////// =========================================
======================================Simulating data...
> Creating model
> Generating data
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89]
{0: 5, 1: 5, 2: 5, 3: 5, 4: 5, 5: 5, 6: 5, 7: 5, 8: 5, 9: 5, 10: 5, 11: 5, 12: 5, 13: 5, 14: 5, 15: 5, 16: 5, 17: 5, 18: 5, 19: 5, 20: 5, 21: 5, 22: 5, 23: 5, 24: 5, 25: 5, 26: 5, 27: 5, 28: 5, 29: 5, 30: 5, 31: 5, 32: 5, 33: 5, 34: 5, 35: 5, 36: 5, 37: 5, 38: 5, 39: 5, 40: 5, 41: 5, 42: 5, 43: 5, 44: 5, 45: 5, 46: 5, 47: 5, 48: 5, 49: 5, 50: 5, 51: 5, 52: 5, 53: 5, 54: 5, 55: 5, 56: 5, 57: 5, 58: 5, 59: 5, 60: 5, 61: 5, 62: 5, 63: 5, 64: 5, 65: 5, 66: 5, 67: 5, 68: 5, 69: 5, 70: 5, 71: 5, 72: 5, 73: 5, 74: 5, 75: 5, 76: 5, 77: 5, 78: 5, 79: 5, 80: 5, 81: 5, 82: 5, 83: 5, 84: 5, 85: 5, 86: 5, 87: 5, 88: 5, 89: 5}
5
NUM VARIABLES
90
NUM EDGES
45
EDGES
[(3, 31), (3, 61), (4, 39), (5, 26), (7, 49), (10, 16), (10, 48), (11, 72), (12, 42), (12, 78), (13, 27), (13, 79), (14, 35), (14, 83), (15, 37), (15, 70), (16, 39), (16, 82), (20, 25), (20, 31), (20, 44), (22, 51), (23, 76), (24, 39), (26, 58), (28, 45), (32, 62), (34, 50), (34, 52), (39, 54), (39, 69), (40, 63), (40, 70), (42, 61), (43, 53), (47, 83), (47, 88), (49, 62), (51, 83), (52, 53), (53, 81), (54, 88), (57, 62), (74, 87), (75, 86)]
>>>>>>>>>>>>>>>>>>>>>METHOD: structured
======PARAMS
1e-05
1.15e-05
/home/walidch/mrf_project/MRFToolBox/mrftools/mrftools/Learner.py:119: FutureWarning: comparison to `None` will result in an elementwise object comparison in the future.
  if (self.tau_q == None or not self.fully_observed) and not (self.graft):
/home/walidch/mrf_project/MRFToolBox/mrftools/mrftools/Learner.py:133: FutureWarning: comparison to `None` will result in an elementwise object comparison in the future.
  if (self.tau_q == None or not self.fully_observed) and not (self.graft):
False
======PARAMS
2.5e-05
2.875e-05
False
======PARAMS
5e-05
5.75e-05
False
======PARAMS
7.5e-05
8.625e-05
False
======PARAMS
0.0001
0.000115
False
======PARAMS
0.00025
0.0002875
False
======PARAMS
0.0005
0.000575
False
======PARAMS
0.00075
0.0008625
False
======PARAMS
0.001
0.00115
False
======PARAMS
0.0025
0.002875
False
======PARAMS
0.005
0.00575
False
======PARAMS
0.0075
0.008625
False
======PARAMS
0.01
0.0115
False
======PARAMS
0.025
0.02875
False
======PARAMS
0.05
0.0575
Average Selection iterations
86.8666666667
SUFFICIENT STATS
4005
Recall
0.511111111111
Precision
0.53488372093
F1-score
0.522727272727
Correctly re-ordered
167.0
1.0
True
NEW OPT EDGE L1
0.05
======PARAMS
0.075
0.08625
Average Selection iterations
141.178571429
SUFFICIENT STATS
4005
Recall
0.266666666667
Precision
0.461538461538
F1-score
0.338028169014
Correctly re-ordered
27.0
1.0
True
======PARAMS
0.1
0.115
Average Selection iterations
315.636363636
SUFFICIENT STATS
4005
Recall
0.133333333333
Precision
0.666666666667
F1-score
0.222222222222
Correctly re-ordered
4.0
1.0
True
>>>>>>>>Getting best node reg...
//////
0.05
0.075
//////
0.05
0.0625
